{"version":3,"file":"main.bundle.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,KAAK,EAAE,IAAI,EAAE,EAAC,CAAC;AAC9D,MAAM,OAAO,GAAG,mBAAO,CAAC,yDAAO,CAAC,CAAC;AACjC,MAAM,kBAAkB,GAAG,mBAAO,CAAC,iHAA8C,CAAC,CAAC;AACnF,MAAM,YAAY,GAAG,mBAAO,CAAC,sGAAuC,CAAC,CAAC;AACtE,MAAM,YAAY,GAAG,mBAAO,CAAC,iEAAsB,CAAC,CAAC;AACrD,MAAM,WAAW,GAAG,mBAAO,CAAC,6DAAW,CAAC,CAAC;AACzC,MAAM,kBAAkB,GAAG,mBAAO,CAAC,6EAA4B,CAAC,CAAC;AACjE,EAAE;AACF,MAAM,UAAU;IACZ;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG;YACT,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,CAAC;SACX,CAAC;QACF,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;YACnC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAChD,IAAI,IAAI,CAAC,WAAW;gBAChB,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,CAAC;;gBAEzC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAG,EAAE;gBAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,uBAAuB;gBACvB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,EAAE;gBACzC,uBAAuB;gBACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC7B,CAAC,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;oBAChE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;wBAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;oBAC9B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;iBAC5E;qBACI,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;oBACtE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;oBAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;wBAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;oBAC9B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;iBAC5E;aACJ;YACD,EAAE;YACF,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,WAAW,EAAE;gBACpF,IAAI,CAAC,MAAM,EAAE,CAAC;aACjB;YACD,IAAI,CAAC,IAAI,CAAC,SAAS;gBACf,OAAO;YACX,2BAA2B;YAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YACpE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACrE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;YACnE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;YAC3E,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YACpE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;YACzE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;YACvE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;YAC3E,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACpE,EAAE;YACF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9D,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9C,2DAA2D;QAC/D,CAAC,CAAC;QACF,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;IACD,CAAC;IACD,IAAI;QACA,SAAS;QACT,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;QACzD,QAAQ;QACR,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU;YAChC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;QAC3C,QAAQ;QACR,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACrD,SAAS;QACT,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAChG,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACnG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,QAAQ;QACR,MAAM,KAAK,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QACnD,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACtB,WAAW;QACX,IAAI,CAAC,WAAW,GAAG,IAAI,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAChF,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;QACnC,WAAW;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,aAAa,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QACnE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC;QAClE,4CAA4C;QAC5C,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,SAAS;QACT,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9C,GAAG;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,6BAA6B;QAC7B,uBAAuB;QACvB,oBAAoB;QACpB,IAAI,aAAa,GAAG,IAAI,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC9D,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,CAAC,UAAU,EAAE,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,+BAA+B;QAC/B,QAAQ;QACR,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACtE,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,CAAC,UAAU,EAAE,CAAC;QACnD,IAAI,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,0BAA0B;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzE,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC9B,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;aACvB;YACD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,OAAO,CAAC,eAAe,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAClG,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACtE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;YACtC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B;QACD,EAAE;QACF,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,EAAE;QACF,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IACD,CAAC;IACD,KAAK;QACD,IAAI,KAAK,GAAG;YACR,KAAK,EAAE,SAAS;SACnB,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAC1D,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;YACjD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9F,CAAC,CAAC,CAAC;IACP,CAAC;IACD,CAAC;IACD,SAAS;QACL,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,CAAC,UAAU,EAAE,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+CAA+C,EAAE,CAAC,IAAI,EAAE,EAAE;YACvE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;YAC3C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,CAAC;IACD,mBAAmB;QACf,MAAM,aAAa,GAAG,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC;QAClD,MAAM,eAAe,GAAG,aAAa,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;QAChF,IAAI,CAAC,gBAAgB,GAAG,IAAI,kBAAkB,CAAC,cAAc,EAAE,CAAC;QAChE,MAAM,iBAAiB,GAAG,IAAI,OAAO,CAAC,cAAc,EAAE,CAAC;QACvD,MAAM,KAAK,GAAG,IAAI,CAAC;QACnB,qCAAqC;QACrC,+CAA+C;QAC/C,4CAA4C;QAC5C,oDAAoD;QACpD,2CAA2C;QAC3C,IAAI,SAAS,GAAG,IAAI,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC5C,IAAI,IAAI,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,aAAa,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,UAAU,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAChC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;YAChD,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;YACpD,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC/C,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;gBAC3E,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACrB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;;oBAEtB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;aAC7B;SACJ;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAC5B,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC/C,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;SAC9C;QACD,iBAAiB,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,OAAO,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QACtF,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7E,iBAAiB,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/F,iBAAiB,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,OAAO,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;QACzF,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IACD,CAAC;IACD,iBAAiB;QACb,IAAI,IAAI,CAAC,MAAM;YACX,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAC1B,EAAE;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QACnF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QAC3F,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC;IAC1D,CAAC;IACD,CAAC;IACD,kCAAkC;IAClC,qCAAqC;IACrC,wEAAwE;IACxE,gDAAgD;IAChD,0BAA0B;IAC1B,4BAA4B;IAC5B,wBAAwB;IACxB,wBAAwB;IACxB,sFAAsF;IACtF,YAAY;IACZ,aAAa;IACb,4BAA4B;IAC5B,6BAA6B;IAC7B,4BAA4B;IAC5B,sCAAsC;IACtC,oCAAoC;IACpC,oCAAoC;IACpC,mCAAmC;IACnC,kEAAkE;IAClE,qEAAqE;IACrE,0FAA0F;IAC1F,+EAA+E;IAC/E,YAAY;IACZ,wBAAwB;IACxB,+DAA+D;IAC/D,sDAAsD;IACtD,kEAAkE;IAClE,oCAAoC;IACpC,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uDAAuD;IACvD,qDAAqD;IACrD,yCAAyC;IACzC,sCAAsC;IACtC,YAAY;IACZ,WAAW;IACX,mDAAmD;IACnD,iEAAiE;IACjE,oCAAoC;IACpC,sCAAsC;IACtC,KAAK;IACL,MAAM;QACF,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC;QACvE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;IACD,CAAC;CACJ;AACD,CAAC;AACD,kBAAe,GAAG,IAAI,UAAU,EAAE,CAAC;;;;;;;;;;;AC1RtB;AACb,8CAA6C,EAAE,KAAK,EAAE,IAAI,EAAE,EAAC,CAAC;AAC9D,kBAAkB,GAAG,KAAK,CAAC,CAAC;AAC5B,MAAM,OAAO,GAAG,mBAAO,CAAC,yDAAO,CAAC,CAAC;AACjC,MAAM,UAAW,SAAQ,OAAO,CAAC,cAAc;IAC3C;QACI,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAqHnB;YACG,IAAI,CAAC,cAAc,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA6CzB;YACG,IAAI,CAAC,QAAQ,GAAG;gBACZ,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;gBACxB,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;gBACvB,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;gBACzB,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;gBACvB,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;gBACnB,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBAC9C,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;gBACxB,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;gBACzD,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBACnD,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBAC/C,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;aAClD,CAAC;IACV,CAAC;IACD,CAAC;CACJ;AACD,kBAAkB,GAAG,UAAU,CAAC;;;;;;;;;;;AC5LnB;AACb,8CAA6C,EAAE,KAAK,EAAE,IAAI,EAAE,EAAC,CAAC;AAC9D,sBAAsB,GAAG,KAAK,CAAC,CAAC;AAChC,MAAM,OAAO,GAAG,mBAAO,CAAC,yDAAO,CAAC,CAAC;AACjC,EAAE;AACF,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC;AACzC,IAAI,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;AACtE,MAAM,cAAe,SAAQ,OAAO,CAAC,cAAc;IAC/C;QACI,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,IAAI;YACnB,IAAI,CAAC,YAAY,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;SA0BvB;YACG,IAAI,CAAC,cAAc,GAAG;;;;;;;;;;;;;;;;;;SAkBzB;YACG,IAAI,CAAC,QAAQ,GAAG;gBACZ,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBAC9C,aAAa,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE;gBACzC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;aACtB,CAAC;IACV,CAAC;CACJ;AACD,sBAAsB,GAAG,cAAc,CAAC;;;;;;;UChExC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack:///./src/scripts/index.ts","webpack:///./src/scripts/shaders/Face.Sader.ts","webpack:///./src/scripts/shaders/Particles.Shader.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = require(\"three\");\nconst OrbitControls_js_1 = require(\"three/examples/jsm/controls/OrbitControls.js\");\nconst GLTFLoader_1 = require(\"three/examples/jsm/loaders/GLTFLoader\");\nconst Face_Sader_1 = require(\"./shaders/Face.Sader\");\nconst tweakpane_1 = require(\"tweakpane\");\nconst Particles_Shader_1 = require(\"./shaders/Particles.Shader\");\n//\nclass ModelScene {\n    constructor() {\n        this.elapsedTime = 0;\n        this.numberOfLines = 100;\n        this.moveForward = true;\n        this.clickElapsedTime = 0;\n        this.sizes = {\n            height: 0,\n            width: 0\n        };\n        this.tick = () => {\n            this.delta = this.clock.getDelta();\n            this.elapsedTime += this.delta;\n            this.clickDelta = this.clockForClick.getDelta();\n            if (this.moveForward)\n                this.clickElapsedTime += this.clickDelta;\n            else\n                this.clickElapsedTime -= this.clickDelta;\n            this.canvas.addEventListener('mousedown', () => {\n                this.moveForward = true;\n                // this.clickDelta = 0;\n                this.clockForClick.start();\n            });\n            this.canvas.addEventListener('mouseup', () => {\n                // this.clickDelta = 0;\n                this.moveForward = false;\n            });\n            if (this.faceModel) {\n                if (this.faceModel.position.z <= -1.7 && this.moveForward === true) {\n                    if (+this.faceModel.position.z.toFixed(1) == -1.7)\n                        this.clockForClick.stop();\n                    this.faceModel.position.set(0, -3.2, this.clickElapsedTime * 0.40 - 2.1);\n                }\n                else if (this.faceModel.position.z >= -2.5 && this.moveForward === false) {\n                    this.clockForClick.start();\n                    if (+this.faceModel.position.z.toFixed(1) == -2.5)\n                        this.clockForClick.stop();\n                    this.faceModel.position.set(0, -3.2, this.clickElapsedTime * 0.40 - 2.1);\n                }\n            }\n            //\n            window.requestAnimationFrame(this.tick);\n            if (this.sizes.width !== window.innerWidth || this.sizes.height !== window.innerHeight) {\n                this.resize();\n            }\n            if (!this.faceModel)\n                return;\n            // render scene into target\n            this.face.visible = false;\n            this.faceModel.visible = true;\n            this.renderer.setRenderTarget(this.target);\n            this.renderer.render(this.scene, this.camera);\n            this.renderer.setRenderTarget(null);\n            this.face.visible = true;\n            this.lines.visible = true;\n            this.faceModel.visible = false;\n            this.planeMaterial.uniforms.tDepth.value = this.target.depthTexture;\n            this.planeMaterial.uniforms.cameraNear.value = this.cameraDepth.near;\n            this.planeMaterial.uniforms.cameraFar.value = this.cameraDepth.far;\n            this.planeMaterial.uniforms.uTime.value = Math.sin(this.elapsedTime) * 0.6;\n            this.linesMaterial.uniforms.tDepth.value = this.target.depthTexture;\n            this.linesMaterial.uniforms.cameraNear.value = this.cameraDepth.near * 1;\n            this.linesMaterial.uniforms.cameraFar.value = this.cameraDepth.far * 1;\n            this.linesMaterial.uniforms.uTime.value = Math.sin(this.elapsedTime) * 0.6;\n            this.linesMaterial.uniforms.uNoiseTime.value = this.elapsedTime / 1;\n            //\n            this.particleMaterial.uniforms.uTime.value = this.elapsedTime;\n            this.mapControls.update();\n            this.renderer.render(this.scene, this.camera);\n            // this.renderer.render( this.postScene, this.postCamera );\n        };\n        this.init();\n        console.log('it worked!');\n    }\n    ;\n    init() {\n        // Canvas\n        this.canvas = document.querySelector('canvas.webglView');\n        // Sizes\n        this.sizes.width = window.innerWidth,\n            this.sizes.height = window.innerHeight;\n        // Scene\n        this.scene = new three_1.Scene();\n        this.scene.background = new three_1.Color('#020021');\n        // Camera\n        this.camera = new three_1.PerspectiveCamera(25, this.sizes.width / this.sizes.height, 0.1, 500);\n        this.cameraDepth = new three_1.PerspectiveCamera(25, this.sizes.width / this.sizes.height, 0.1, 4);\n        this.camera.position.set(0, 0, 0.8);\n        this.cameraDepth.position.set(0, 0, 0.8);\n        this.scene.add(this.camera);\n        // Light\n        const light = new three_1.PointLight('#ffffff', 4);\n        light.position.set(0, 7, 7);\n        this.scene.add(light);\n        // Controls\n        this.mapControls = new OrbitControls_js_1.MapControls(this.camera, this.canvas);\n        this.mapControls.enableDamping = true;\n        this.mapControls.minDistance = 0.8;\n        this.mapControls.maxDistance = 2.5;\n        // Renderer\n        this.renderer = new three_1.WebGLRenderer({ canvas: this.canvas });\n        this.renderer.setSize(this.sizes.width, this.sizes.height);\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n        // Create a render target with depth texture\n        this.setupRenderTarget();\n        // Resize\n        window.addEventListener('resize', this.resize());\n        this.clock = new three_1.Clock();\n        this.clockForClick = new three_1.Clock(false);\n        //f\n        this.loadModel();\n        // Setup post-processing step\n        // this.findingDepth();\n        // Face plane Shader\n        let planeGeometry = new three_1.PlaneGeometry(5, 5, 400, 400);\n        this.planeMaterial = new Face_Sader_1.FaceSheder();\n        this.face = new three_1.Mesh(planeGeometry, this.planeMaterial);\n        this.face.position.set(0, 0, 1);\n        // this.scene.add( this.face );\n        // Lines\n        this.linesGeometry = new three_1.PlaneBufferGeometry(2, 10, 100, 100);\n        this.linesMaterial = new Face_Sader_1.FaceSheder();\n        let line = new three_1.Mesh(this.linesGeometry, this.linesMaterial);\n        line.position.set(0, 0, 1);\n        // this.scene.add( line );\n        for (let i = 0; i < this.numberOfLines; i++) {\n            this.linesGeometry = new three_1.PlaneBufferGeometry(2, 0.006, 100, 100);\n            let lineY = [];\n            let len = this.linesGeometry.attributes.position.array.length;\n            for (let j = 0; j < len / 3; j++) {\n                lineY.push(i / 100);\n            }\n            this.linesGeometry.setAttribute('lineY', new three_1.BufferAttribute(new Float32Array(lineY), 1));\n            this.lines = new three_1.Mesh(this.linesGeometry, this.linesMaterial);\n            this.lines.position.y = (i - 40) / 50;\n            this.scene.add(this.lines);\n        }\n        //\n        this.debug();\n        this.backgroundParticles();\n        //\n        this.tick();\n    }\n    ;\n    debug() {\n        let props = {\n            color: '#0f0017'\n        };\n        const faceDebug = new tweakpane_1.Pane({ title: 'Face' });\n        faceDebug.addInput(props, 'color').on('change', () => {\n            this.linesMaterial.uniforms.uColor.value.setHex(parseInt(props.color.replace('#', '0x')));\n        });\n    }\n    ;\n    loadModel() {\n        this.loader = new GLTFLoader_1.GLTFLoader();\n        this.loader.load('resources/models/zophrac/male_face/scene.gltf', (gltf) => {\n            this.faceModel = gltf.scene.children[0];\n            this.faceModel.scale.set(3, 3, 2.5);\n            this.faceModel.position.set(0, -3.2, -2.1);\n            this.scene.add(this.faceModel);\n        });\n    }\n    ;\n    backgroundParticles() {\n        const textureLoader = new three_1.TextureLoader();\n        const particleTexture = textureLoader.load('/resources/textures/particle1.png');\n        this.particleMaterial = new Particles_Shader_1.ParticleShader();\n        const particlesGeometry = new three_1.BufferGeometry();\n        const count = 1000;\n        // this.particleMaterial.size = 0.09;\n        // this.particleMaterial.map = particleTexture;\n        // this.particleMaterial.transparent = true;\n        // this.particleMaterial.alphaMap = particleTexture;\n        // this.particleMaterial.alphaTest = 0.001;\n        let positions = new Float32Array(count * 3);\n        let size = new Float32Array(count);\n        let particleColor = new Float32Array(count);\n        let blinkStart = new Float32Array(count);\n        for (let i = 0; i < count * 3; i++) {\n            positions[i * 3] = (Math.random() - 0.5) * 1.95;\n            positions[i * 3 + 1] = (Math.random() - 0.5) * 1.95;\n            positions[i * 3 + 2] = (Math.random() - 3) * 1;\n            if (Math.abs(positions[i * 3]) < 0.5 && Math.abs(positions[i * 3 + 1]) < 0.63) {\n                if (positions[i * 3] >= 0)\n                    positions[i * 3] += 1;\n                else\n                    positions[i * 3] -= 1;\n            }\n        }\n        for (let i = 0; i < count; i++) {\n            size[i] = Math.random() / 5;\n            particleColor[i] = (Math.random() - 0.83) * 10;\n            blinkStart[i] = (Math.random() - 0.5) * 10;\n        }\n        particlesGeometry.setAttribute('position', new three_1.BufferAttribute(positions, 3));\n        particlesGeometry.setAttribute('size', new three_1.BufferAttribute(size, 1));\n        particlesGeometry.setAttribute('particleColor', new three_1.BufferAttribute(particleColor, 1));\n        particlesGeometry.setAttribute('blinkStart', new three_1.BufferAttribute(blinkStart, 1));\n        let points = new three_1.Points(particlesGeometry, this.particleMaterial);\n        this.scene.add(points);\n    }\n    ;\n    setupRenderTarget() {\n        if (this.target)\n            this.target.dispose();\n        //\n        this.target = new three_1.WebGLRenderTarget(window.innerWidth, window.innerHeight);\n        this.target.texture.format = three_1.RGBFormat;\n        this.target.texture.minFilter = three_1.NearestFilter;\n        this.target.texture.magFilter = three_1.NearestFilter;\n        this.target.texture.generateMipmaps = false;\n        this.target.stencilBuffer = false;\n        this.target.depthBuffer = true;\n        this.target.depthTexture = new three_1.DepthTexture(window.innerWidth, window.innerHeight);\n        this.target.depthTexture.type = three_1.UnsignedShortType;\n        this.target.depthTexture.format = three_1.DepthFormat;\n    }\n    ;\n    // public findingDepth () : void {\n    //     // Setup post processing stage\n    //     this.postCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n    //     this.postMaterial = new ShaderMaterial( {\n    //         vertexShader: `\n    //         varying vec2 vUv;\n    //         void main() {\n    //             vUv = uv;\n    //             gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    //         }\n    //         `,\n    //         fragmentShader: `\n    //         #include <packing>\n    //         varying vec2 vUv;\n    //         uniform sampler2D tDiffuse;\n    //         uniform sampler2D tDepth;\n    //         uniform float cameraNear;\n    //         uniform float cameraFar;\n    //         float readDepth( sampler2D depthSampler, vec2 coord ) {\n    //             float fragCoordZ = texture2D( depthSampler, coord ).x;\n    //             float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n    //             return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n    //         }\n    //         void main() {\n    //             //vec3 diffuse = texture2D( tDiffuse, vUv ).rgb;\n    //             float depth = readDepth( tDepth, vUv );\n    //             gl_FragColor.rgb = 1.0 - vec3( pow( depth, 0.2 ) );\n    //             gl_FragColor.a = 1.0;\n    //         }\n    //         `,\n    //         uniforms: {\n    //             cameraNear: { value: this.camera.near },\n    //             cameraFar: { value: this.camera.far },\n    //             tDiffuse: { value: null },\n    //             tDepth: { value: null }\n    //         }\n    //     } );\n    //     const postPlane = new PlaneGeometry( 2, 2 );\n    //     const postQuad = new Mesh( postPlane, this.postMaterial );\n    //     this.postScene = new Scene();\n    //     this.postScene.add( postQuad );\n    // };\n    resize() {\n        this.sizes.width = window.innerWidth;\n        this.sizes.height = window.innerHeight;\n        this.camera.aspect = this.sizes.width / this.sizes.height;\n        this.camera.updateProjectionMatrix();\n        const dpr = this.renderer.getPixelRatio();\n        this.target.setSize(window.innerWidth * dpr, window.innerHeight * dpr);\n        this.renderer.setSize(this.sizes.width, this.sizes.height);\n    }\n    ;\n}\n;\nexports.default = new ModelScene();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FaceSheder = void 0;\nconst three_2 = require(\"three\");\nclass FaceSheder extends three_2.ShaderMaterial {\n    constructor() {\n        super();\n        this.transparent = true;\n        this.vertexShader = `\n        #include <packing>\n\n        varying vec2 vUv;\n        varying vec2 vUvLines;\n        varying vec3 vNormal;\n        varying vec3 vPosition;\n\n        uniform sampler2D tDiffuse;\n        uniform sampler2D tDepth;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float uTime;\n        uniform float uNoiseTime;\n\n        attribute float lineY;\n\n        //\tClassic Perlin 3D Noise\n        //\tby Stefan Gustavson\n        //\n        vec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n        vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n        vec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\n        float getPerlinNoise3d( vec3 P ) {\n\n            vec3 Pi0 = floor(P); // Integer part for indexing\n            vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n            Pi0 = mod(Pi0, 289.0);\n            Pi1 = mod(Pi1, 289.0);\n            vec3 Pf0 = fract(P); // Fractional part for interpolation\n            vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n            vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n            vec4 iy = vec4(Pi0.yy, Pi1.yy);\n            vec4 iz0 = Pi0.zzzz;\n            vec4 iz1 = Pi1.zzzz;\n\n            vec4 ixy = permute(permute(ix) + iy);\n            vec4 ixy0 = permute(ixy + iz0);\n            vec4 ixy1 = permute(ixy + iz1);\n\n            vec4 gx0 = ixy0 / 7.0;\n            vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n            gx0 = fract(gx0);\n            vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n            vec4 sz0 = step(gz0, vec4(0.0));\n            gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n            gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n            vec4 gx1 = ixy1 / 7.0;\n            vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n            gx1 = fract(gx1);\n            vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n            vec4 sz1 = step(gz1, vec4(0.0));\n            gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n            gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n            vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n            vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n            vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n            vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n            vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n            vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n            vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n            vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n            vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n            g000 *= norm0.x;\n            g010 *= norm0.y;\n            g100 *= norm0.z;\n            g110 *= norm0.w;\n            vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n            g001 *= norm1.x;\n            g011 *= norm1.y;\n            g101 *= norm1.z;\n            g111 *= norm1.w;\n\n            float n000 = dot(g000, Pf0);\n            float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n            float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n            float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n            float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n            float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n            float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n            float n111 = dot(g111, Pf1);\n\n            vec3 fade_xyz = fade(Pf0);\n            vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n            vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n            float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n            return 2.2 * n_xyz;\n\n        }\n        //\n\n        float readDepth( sampler2D depthSampler, vec2 coord ) {\n            float fragCoordZ = texture2D( depthSampler, coord ).x;\n            float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n            return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n        }\n\n        void main () {\n\n            float noise = getPerlinNoise3d( vec3(  vec2( uv.x, lineY ) * 70.0, uNoiseTime / 1.0 ) ) / 2.0;\n            float depth = readDepth( tDepth, vec2( uv.x, lineY ) ) * 10.0;\n            vec3 pos = position;\n            pos.z += ( 1.0 - depth ); //- uTime;\n            pos.y += noise * 0.01;\n\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n\n            vUv = uv;\n            vUvLines = vec2( uv.x, lineY );\n            vNormal = normal;\n            vPosition = pos;\n\n        }\n        `,\n            this.fragmentShader = `\n        #include <packing>\n\n        varying vec2 vUv;\n        varying vec2 vUvLines;\n        varying vec3 vNormal;\n        varying vec3 vPosition;\n\n        uniform sampler2D tDiffuse;\n        uniform sampler2D tDepth;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float uTime;\n        uniform vec3 uDirection;\n        uniform vec3 uLightColor;\n        uniform vec3 uColor;\n        uniform vec3 uColor2;\n        uniform vec3 uColor3;\n\n        float readDepth( sampler2D depthSampler, vec2 coord ) {\n            float fragCoordZ = texture2D( depthSampler, coord ).x;\n            float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n            return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n        }\n\n        void main() {\n\n            // Diffuse\n            vec3 norm = normalize( vNormal );\n            float diff = max( dot( norm, uDirection ), 0.0 );\n            vec3 diffuse = uLightColor * diff;\n\n            //vec3 diffuse = texture2D( tDiffuse, vUv ).rgb;\n            float depth = readDepth( tDepth, vUvLines ) * 2.6;\n\n            // vec3 color = mix( uColor, uLightColor, 0.1 );\n            // vec3 color = step( uColor, vec3( vUvLines, 1.0 ) );\n            // vec3 color = step( depth, uColor2 );\n            // color += step( depth * 1.2, uColor );\n            gl_FragColor.rgb = mix( ( 1.0 - vec3( depth ) + uColor2 ), ( 1.0 - vec3( depth ) + uColor ), depth * 0.6 );  // working\n            // gl_FragColor.rgb = mix( gl_FragColor.rgb, uColor3, 0.7 );\n            // gl_FragColor.rgb = ( 1.0 - vec3( depth ) + color ); //* vec3(diffuse);\n            gl_FragColor.a = step( depth, 1.0 );\n\n        }\n        `,\n            this.uniforms = {\n                cameraNear: { value: 0 },\n                cameraFar: { value: 0 },\n                tDiffuse: { value: null },\n                tDepth: { value: null },\n                uTime: { value: 0 },\n                uColor: { value: new three_2.Color(0x00106b) },\n                uNoiseTime: { value: 0 },\n                uDirection: { value: new three_2.Vector3(1.0, 0.2, 0.4) },\n                uLightColor: { value: new three_2.Color(0xf7f9fc) },\n                uColor2: { value: new three_2.Color(0x260007) },\n                uColor3: { value: new three_2.Color(0x230040) }\n            };\n    }\n    ;\n}\nexports.FaceSheder = FaceSheder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticleShader = void 0;\nconst three_3 = require(\"three\");\n//\nlet loader = new three_3.TextureLoader();\nlet particleTexture = loader.load('resources/textures/particle2.png');\nclass ParticleShader extends three_3.ShaderMaterial {\n    constructor() {\n        super();\n        this.transparent = true,\n            this.vertexShader = `\n        attribute float size;\n        attribute vec3 customColor;\n        attribute vec3 particleColor;\n        attribute float blinkStart;\n\n        varying vec3 vColor;\n        varying vec3 vParticleColor;\n        varying float vBlinkStart;\n\n        uniform float uTime;\n\n        void main() {\n\n            vColor = customColor;\n\n            vec4 mvPosition = modelViewMatrix * vec4( position + sin( uTime / 10.0 ) / 20.0 + cos( uTime / 10.0 ) / 20.0, 1.0 );\n\n            gl_PointSize = size * ( 300.0 / -mvPosition.z );\n\n            gl_Position = projectionMatrix * mvPosition;\n\n            vParticleColor = particleColor;\n            vBlinkStart = blinkStart;\n\n        }\n        `,\n            this.fragmentShader = `\n        uniform vec3 uColor;\n        uniform sampler2D uPointTexture;\n        uniform float uTime;\n\n        varying vec3 vColor;\n        varying vec3 vParticleColor;\n        varying float vBlinkStart;\n\n        void main() {\n\n            gl_FragColor = vec4( vParticleColor + uColor * vec3( 0.0, 0.0, abs( sin( uTime / 2.0 + vBlinkStart ) ) ), 0.45 );\n            // gl_FragColor = vec4( color * vec3( abs( sin( uTime ) ) + 0.3 ), 1.0 );\n\n            gl_FragColor = gl_FragColor * texture2D( uPointTexture, gl_PointCoord );\n            // gl_FragColor.a = 0.25;\n\n        }\n        `,\n            this.uniforms = {\n                uColor: { value: new three_3.Color(0x5796fa) },\n                uPointTexture: { value: particleTexture },\n                uTime: { value: 0 }\n            };\n    }\n}\nexports.ParticleShader = ParticleShader;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklive_city\"] = self[\"webpackChunklive_city\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendor\"], () => (__webpack_require__(\"./src/scripts/index.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}